#!/bin/bash
count=0
if [ "$1" = "--help" -o "$1" = "--h" -o "$1" = "-help" -o "$1" = "-h" -o "$1" = "" ]
then
echo -e "bash_backup: bash_backup filesDir backupDir extension [period] [maxBackupFiles] [backupStatus]"
echo -e " Makes a backup of all files from the specified folder"
echo -e ""
echo -e " Finds all files with specified extention in the folder and puts their archive copies in a special directory once in a while. After starting the pragram backupDir will be formated"
echo -e ""
echo -e " Arguments:"
echo -e " filesDir: Path to directory to backup."
echo -e " backupDir: Path to directory to store backups."
echo -e " extension: Extension of files to backup."
echo -e " period: Period of making backups in seconds. Default value is 60."
echo -e " maxBackupFiles: Number of backups that you need to store. Earlier versions will be replaced with more up-to-date versions in the course of work. Default value is 2."
echo -e " backupStatus: If backupStatus = 1 program will create LOGFILE.txt in folder ~/ where will be stored results of making backups. Backup ... was made successfully means that files integrity was not compromised. Error in ... means that an error occurred while creating a copy of the files. If backupStatus != 1 LOGFILE.txt will not be created. "
echo -e ""
echo -e " Exit status:"
echo -e " Program returns 0 if it was called with atribute --help. In other cases during normal operation it doesn't return anything and works in a constant loop."
exit 0;
fi

rm -rf $2 #Prepearing for work
mkdir $2
if [ -f LOGFILE.txt ]
then
rm -r ~/LOGFILE.txt
fi
if [ -n "$4" ]
then
period=$4
else
period=60
fi
if [ -n "$5" ]
then
maxFilesNumber=$5
else
maxFilesNumber=2
fi
if [ "$6" -eq 1 ]
then
touch ~/LOGFILE.txt
fi
cd $1

for((i=0;i>-1;i++))
do
let numb="$i%$maxFilesNumber+1"
filename="backup$numb.zip"

if [ -f $filename ] # Delete old version
then
rm -r $filename
fi
zip -r $filename $(find . -name "*$3") > /dev/null
mv $filename $2 #Make new backup

if [ "$6" -eq 1 ]
then
cd ~/ || exit

if [ -r forsum ]
then rm -r forsum
fi
mkdir forsum
cp $2$filename ~/

unzip -o ~/$filename -d forsum > /dev/null
rm  ~/$filename
cd ~/forsum || exit
countedSum="cat "*$3" | md5sum" #Counting control sums
cd $1 || exit
origSum="cat "*$3" | md5sum"
let backnumb="$i+1"
if [ "$origSum" = "$countedSum" ]
then echo "$backnumb Sueccessed $maxFilesNumber" >> ~/LOGFILE.txt
else echo "$backnumb Error $maxFilesNumber" >> ~/LOGFILE.txt;
fi
rm -r ~/forsum
fi

sleep $period
done
